<img id="premiereImage" src="image.jpg" alt="Ceci est une image de test" class="photo flexCenter">

Ici nous constatons img, qui sert à afficher une image. En plus de son nom, cette balise possède ici 4 attributs qui permettent de la configurer : 

    id : l’identifiant de la div ;

    src : l’emplacement de l’image ;

    alt : le texte alternatif pour l’image ;

    class : la liste des classes appliquées sur la balise image. 

Chaque balise possède ses propres attributs. Ici, la balise img possède un attribut src qui sert à indiquer où se trouve l’image à afficher. En revanche, une balise div, qui n’affiche pas d'image, ne possèdera pas cet attribut, car elle n’en a pas l’utilité. Il est donc important d’avoir une vision claire du résultat final en HTML afin d’écrire du code cohérent. 
Modifiez un élément du DOM

Pour modifier un élément du DOM, JavaScript propose là encore de nombreuses méthodes. Nous en aborderons deux dans ce chapitre :

    setAttribute : méthode la plus générique, qui permet de spécifier n’importe quel attribut ;

    classList : propriété spécifique qui permet de modifier des classes. 

Utilisez setAttribute pour modifier les attributs

Si nous voulons modifier l’attribut alt de notre balise image, nous pouvons écrire :baliseImage.alt = "Ceci est une image de test modifiée";

Utilisez classList pour modifier les classes

Parmi les attributs disponibles, il en existe un particulier, qui correspond à la liste des classes qui sont appliquées sur une balise.

<div class="listeMots centree actif photo"></div>

Il est évidemment possible de modifier cet attribut avec setAttribute, mais si l’on veut ajouter ou supprimer une seule classe, c’est peu pratique, car il faut alors réécrire l'ensemble des classes. JavaScript nous propose donc une syntaxe spécifique : l’utilisation de la propriété classList et des méthodes add et remove.

    baliseImage.alt = "Ceci est une image de test modifiée";

    baliseImage.classList.add("nouvelleClasse")

    baliseImage.classList.remove("photo")

Utilisez l’inspecteur pour vérifier vos modifications

En utilisant des propriétés et des méthodes, nous modifions le code HTML de la page. Il est donc important de vérifier que ces modifications correspondent bien à ce que nous souhaitons, comme nous l'avons fait jusqu’à présent avec des console.log.enons cette balise :

<img id="premiereImage" src="image.jpg" alt="Ceci est une image de test" class="photo flexCenter">

Puis, appliquons ce code JS :

let baliseImage = document.getElementById("premiereImage");

baliseImage.setAttribute("alt", "Ceci est une image de test modifiée");

baliseImage.src = "cheminImage.jpg";

baliseImage.classList.add("nouvelleClasse")

baliseImage.classList.remove("photo")

Enfin, vérifions le résultat final grâce à l’inspecteur :

Capture d'écran. Sous l'inspecteur, le body est surligné en bleu.
