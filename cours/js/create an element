Nous savons maintenant comment modifier un √©l√©ment existant. Mais comment cr√©er un nouvel √©l√©ment dans une page web ? La fa√ßon de faire est toujours la m√™me : d‚Äôabord cr√©er l‚Äô√©l√©ment, puis le lier √† un √©l√©ment d√©j√† existant de la page.

Pour cr√©er nos √©l√©ments, l√† encore JavaScript nous propose plusieurs mani√®res de faire. Nous en aborderons deux dans ce chapitre :

    la m√©thode createElement ;

    la propri√©t√© innerHTML. 

Cr√©ez une nouvelle balise gr√¢ce √† createElement
Utilisez la m√©thode CreateElement

CreateElement est une m√©thode fournie par JavaScript, accessible depuis document. Elle permet de cr√©er n‚Äôimporte quelle balise :

let nouvelElement = document.createElement("div");

Ici, vous pouvez remplacer div par le nom de balise que vous d√©sirez, section, p, h1, etc. Une fois cette balise cr√©√©e, vous pouvez la configurer avec les m√©thodes que nous avons vues dans le chapitre pr√©c√©dent. 

Dans nouvelElement, nous aurons un objet HTMLElement qui repr√©sente la balise que nous avons cr√©√©e. 
Ins√©rez votre balise dans la page

Une fois l‚Äô√©l√©ment cr√©√©, il n'appara√Æt pas encore dans la page. Pour que cette nouvelle balise apparaisse, nous devons l‚Äôins√©rer dans l‚Äôarbre DOM afin que JavaScript sache exactement √† quel endroit il faudra mettre l‚Äô√©l√©ment. Pour cela, nous devons : 

    d√©terminer quel sera l‚Äô√©l√©ment parent ;

    utiliser appendChild (litt√©ralement en anglais : ‚Äúajouter un enfant‚Äù).

// R√©cup√©rer un √©l√©ment parent existant

let parentElement = document.getElementById("conteneur");


// Ajouter le nouvel √©l√©ment au parent

parentElement.appendChild(nouvelElement);

Ici, j‚Äôai ajout√© une balise div √† un √©l√©ment que j‚Äôai r√©cup√©r√© gr√¢ce √† getElementById.

Il existe d‚Äôautres m√©thodes pour ins√©rer des √©l√©ments dans l‚Äôarbre DOM, comme prepend, before ou insertAdjacentElement. N‚Äôh√©sitez pas √† consulter la documentation pour en savoir plus.
Utilisez la propri√©t√© innerHTML pour ins√©rer du HTML

Avec la m√©thode createElement, nous cr√©ons un √©l√©ment que nous pouvons modifier et ins√©rer dans le HTML. Mais que se passe-t-il quand nous devons cr√©er et imbriquer de nombreux √©l√©ments ?

    Regardons ensemble avec cet exemple plus complexe :

// D√©finition des variables contenant le texte du titre et du paragraphe

let contenuTitre = "Azertype"

let contenuParagraphe = "L'application pour apprendre √† taper plus vite !"


// Cr√©ation d'un div avec createElement. Dans cette div, on va cr√©er un titre h1 et un paragraphe p

let nouvelleDiv = document.createElement("div")

let nouveauTitre = document.createElement("h1")

let nouveauParagraphe = document.createElement("p")


// On ajoute du texte dans le titre et le paragraphe

nouveauTitre.textContent = contenuTitre

nouveauParagraphe.textContent = contenuParagraphe


// On ajoute le titre et le paragraphe dans la div

nouvelleDiv.appendChild(nouveauTitre)

nouvelleDiv.appendChild(nouveauParagraphe)


// On ajoute la div dans le body

let body = document.querySelector("body")

body.appendChild(nouvelleDiv)

Dans le code ci-dessus :

    je cr√©e deux variables qui vont contenir le texte du titre et du paragraphe ;

    je cr√©e trois √©l√©ments, une div, un titre et un paragraphe ;

    j‚Äôins√®re du texte cr√©√© avec les variables dans le titre et le paragraphe ;

    j‚Äôins√®re du titre et du paragraphe en tant qu‚Äôenfants de la div ;

    j‚Äôins√®re une div en tant qu‚Äôenfant de la balise body. 

Cela fonctionne parfaitement, et donne le r√©sultat suivant :
Capture d'√©cran. Sous l'inspecteur, de body est surlign√© en bleu et les d√©tails du body sont affich√©s.

Utilisez l‚Äôinterpolation pour g√©n√©rer du HTML

Pour g√©n√©rer le HTML, nous pouvons utiliser la concat√©nation, comme nous l‚Äôavons vu au d√©but de ce cours avec + .  Dans ce chapitre, l‚Äôheure est venue de d√©couvrir une nouvelle m√©thode plus efficace encore : l‚Äôinterpolation.

L‚Äôinterpolation ? ü§® √áa marche comment ?

L‚Äôinterpolation consiste √† entourer la cha√Æne de caract√®res avec des backticks : `  . Ce caract√®re correspond √† l‚Äôaccent du ‚Äú√®‚Äù, mais sans le e en dessous üôÇ. Ainsi, quand nous voulons ins√©rer une variable, il suffit de l‚Äôentourer avec${} .

    Voici un exemple :

let contenuTitre = "Azertype"

let contenuParagraphe = "L'application pour apprendre √† taper plus vite !"


let div = `

    <div>

        <h1>${contenuTitre}</h1>

        <p>${contenuParagraphe}</p>

    </div>

    `;

OK je vois‚Ä¶. Mais du coup pourquoi utiliser √ßa plut√¥t que l‚Äôop√©rateur + ?

Car l‚Äôinterpolation est plus s√©curis√©e que la concat√©nation simple avec  +  , et souvent plus facile √† lire. N‚Äôh√©sitez donc pas √† vous en servir √† chaque fois que vous en avez besoin !
Ins√©rez votre HTML gr√¢ce √† innerHTML

Maintenant que le code HTML est g√©n√©r√©, comme avec createElement, nous devons l‚Äôins√©rer dans un √©l√©ment existant de la page. Pour cela, on choisit la balise qui va contenir notre code HTML, et on met simplement ce code HTML dans la propri√©t√© innerHTML :

let body = document.querySelector("body")

body.innerHTML = div

Et voil√†, le tour est jou√© ! ü•≥
R√©capitulons en vid√©o

Retrouvez les d√©monstrations de ce chapitre dans la vid√©o ci-dessous :
√Ä vous de jouer !

Pour l‚Äôinstant, dans notre application, le r√©sultat appara√Æt uniquement dans la console. Le but ici va √™tre de mettre √† jour la page HTML apr√®s avoir jou√©, de mani√®re √† afficher le r√©sultat de la partie.

Je vous invite √† utiliser ce projet sur GitHub, qui reprend ce que nous avons r√©alis√© ensemble. J‚Äôy ai int√©gr√© une maquette HTML/CSS que vous pourriez cloner. Cependant, vous pouvez √©galement reprendre votre code et d√©velopper le projet vous-m√™me, si vous voulez augmenter le niveau de difficult√© de l‚Äôexercice.
Mettez √† jour le HTML

Modifiez la fonction afficherResultat. Cette fonction ne devra plus afficher le r√©sultat en console, mais directement sur la page HTML sous la forme ‚Äúscore / nbMotsProposes‚Äù.
Corrig√©

Vous pouvez v√©rifier votre travail en consultant le corrig√© et la vid√©o ci-dessous : 
En r√©sum√©

    Cr√©ez un nouvel √©l√©ment HTML : 

        en utilisant la m√©thode createElement puis en liant l‚Äô√©l√©ment cr√©√© √† la page gr√¢ce √† appendChild ;

        en utilisant la propri√©t√© innerHTML pour ins√©rer directement du HTML sous forme de texte √† l‚Äôint√©rieur d‚Äôune balise.

    L‚Äôinterpolation permet de g√©n√©rer facilement des cha√Ænes de caract√®res complexes en utilisant des backticks. 
